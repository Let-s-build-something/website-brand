name: Distribute Web to FTP

on:
  push:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu instead of Windows

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Step 3: Prepare access to everything
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step 4: Run WasmJsBrowserDistribution script to generate web assembly files
      - name: Run WasmJsBrowserDistribution
        run: ./gradlew wasmJsBrowserDistribution

      # Step 5: Install Brotli on Ubuntu runner
      - name: Install Brotli
        run: sudo apt-get update && sudo apt-get install -y brotli

      # Step 6: Compress .wasm files with Brotli
      - name: Compress .wasm files with Brotli
        run: |
          wasm_dir="${{ github.workspace }}/composeApp/build/dist/wasmJs/productionExecutable"
          find "$wasm_dir" -type f -name "*.wasm" -exec brotli -Z {} \;

      - name: Replace instantiate function and update URLs
        run: |
          # Replace the async function definition
          sed -i 's|async function instantiate(imports={.*}|async function instantiate(imports={}, runInitializer=!0) { await windows.loadComposeApp();|' ${{ github.workspace }}/composeApp/build/dist/wasmJs/productionExecutable/composeApp.js
          
          # Replace "composeApp.wasm" with "window.wasmComposeBlobUrl"
          sed -i 's|composeApp.wasm|window.wasmComposeBlobUrl|g' ${{ github.workspace }}/composeApp/build/dist/wasmJs/productionExecutable/composeApp.js

          # Replace "2eaba8643e2ccdf352b4.wasm" with "window.wasmMagicBlobUrl"
          sed -i 's|2eaba8643e2ccdf352b4.wasm|window.wasmMagicBlobUrl|g' ${{ github.workspace }}/composeApp/build/dist/wasmJs/productionExecutable/composeApp.js

      # Step 7: Upload files to FTP, excluding .wasm files but including .wasm.br files
      - name: Upload files to FTP using cURL
        run: |
          base_dir="${{ github.workspace }}/composeApp/build/dist/wasmJs/productionExecutable"
          ftp_server="${{ secrets.FTP_SERVER_DOMAIN }}"
          ftp_username="${{ secrets.FTP_USERNAME }}"
          ftp_password="${{ secrets.FTP_PASSWORD }}"

          # Change to the base directory
          cd "$base_dir"

          # List files recursively and upload each one except .wasm files
          for file in $(find . -type f ! -name "*.wasm"); do
            if [[ -f "$file" ]]; then
              relative_path="$file"
              ftp_url="ftp://$ftp_server/www/$relative_path"

              # Create directories and upload the file
              curl --ftp-create-dirs -T "$file" -u "${ftp_username}:${ftp_password}" "$ftp_url"
            fi
          done